# spec:
# https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
version: 0.2
env:
  variables:
    TZ: "America/New_York date"
    ReleaseDir: "release"
  parameter-store:
    GITHUB_KEY_PATH: "/github/sshkey/path"
    SSH_KEY_PATH: "/webshell/sshkey/path"
    GO_VERSION: "/development/bzero/go-version"
phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo Install started `date`
      - apt-get update -y && apt-get install build-essential cmake -y
      # Update npm to v8
      - npm install -g npm@8
      - npm ci
  pre_build:
    commands:
      - echo Pre-Build phase...
      - mkdir -p ~/.ssh
      - chmod 700 ~/.ssh
      - aws s3 cp $(dirname $GITHUB_KEY_PATH) ~/.ssh --recursive --include ".pem"
      - aws s3 cp $(dirname $SSH_KEY_PATH) ~/.ssh --recursive --include ".pem"
      - chmod 600 ~/.ssh/*
      - ls -als ~/.ssh/*
      - eval `ssh-agent -s`
      - ssh-add ~/.ssh/*.pem
      - echo Installing go $GO_VERSION...
      # We need a version of go not available via yum
      - wget https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz -q
      - tar -C /usr/local -xzf go${GO_VERSION}.linux-amd64.tar.gz
      - echo 'export PATH=/usr/local/go/bin:$PATH' >>~/.bash_profile
      - export PATH=/usr/local/go/bin:$PATH
  build:
    commands:
      - echo Build started `date`
      - git submodule update --init --recursive --depth 50
      - npm run release-prod
  post_build:
    commands:
      - if ! [ -z "${DRY_RUN}" ]; then echo "Dry run exiting early before publishing" && exit 1; fi
      - echo Post build started `date`
      - Version=$(node -p "require('./package.json').version")
      - if [ $env = "stage" ]; then ReleaseDir=beta/release; fi
      - echo "Uploading artifacts to $ReleaseDir"
      - mkdir -p $ReleaseDir/$Version
      - cp -a bin $ReleaseDir/$Version
      - cp -a $ReleaseDir/$Version $ReleaseDir/latest
      - release-scripts/create-manifest.sh > $ReleaseDir/latest/MANIFEST
      - aws cloudfront create-invalidation --distribution-id=E1Z9ZTI1EEU48X --paths '/release/latest/*'
artifacts:
  files:
    - "**/*"
  base-directory: $ReleaseDir
  name: $ReleaseDir
